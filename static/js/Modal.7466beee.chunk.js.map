{"version":3,"file":"static/js/Modal.7466beee.chunk.js","mappings":"sMA+HA,EA/HiB,CACb,EAAG,CACCA,YAAY,yxBA0BZC,aAAc,CACVC,SAAU,WACVC,WAAY,SACZC,QAAS,EACTC,gBAAiB,UACjBC,MAAO,UACPC,YAAa,MACbC,aAAc,MACdC,WAAY,MACZC,cAAe,MACfC,aAAc,OACdC,UAAW,SACXC,MAAO,QACPC,OAAQ,QACRC,SAAU,aACVC,YAAa,OACbC,YAAa,UACbC,gBAAiB,MACjBC,iBAAkB,MAClBC,eAAgB,MAChBC,kBAAmB,MACnBC,UAAW,uBACXC,WAAY,mBACZC,KAAM,MACNC,UAAW,mBACXC,OAAQ,qBAEZC,cAAe,CACXzB,SAAU,WACV0B,IAAK,OACLJ,KAAM,MACNC,UAAW,mBACXR,YAAa,kCACbY,YAAa,gBACbb,YAAa,UAGrB,EAAG,CACChB,YAAY,0gBAqBZC,aAAc,CACVC,SAAU,WACVC,WAAY,SACZC,QAAS,EACTC,gBAAiB,UACjBC,MAAO,UACPC,YAAa,OACbC,aAAc,OACdC,WAAY,OACZC,cAAe,OACfC,aAAc,OACdC,UAAW,SACXC,MAAO,QACPC,OAAQ,QACRC,SAAU,aACVC,YAAa,OACbC,YAAa,UACbC,gBAAiB,MACjBC,iBAAkB,MAClBC,eAAgB,MAChBC,kBAAmB,MACnBC,UAAW,uBACXC,WAAY,mBACZC,KAAM,MACNC,UAAW,mBACXC,OAAQ,qBAEZC,cAAe,CACXzB,SAAU,WACV0B,IAAK,OACLJ,KAAM,MACNC,UAAW,mBACXR,YAAa,kCACbY,YAAa,gBACbb,YAAa,W,kBC7GzB,EAZc,SAAC,GAAiB,IAAhBc,EAAe,EAAfA,UAEZ,OACI,gBAAKA,UAAS,kBAAaA,GAAaC,KAAK,eAAeC,QAAQ,YAAYC,MAAM,6BAAtF,UACI,iBAAMC,SAAS,UACTC,EAAE,0NACFC,SAAS,eCArBC,EAAYC,EAAAA,MAAW,kBAAM,gCAC7BC,EAAYD,EAAAA,MAAW,kBAAM,gCA2DnC,EAzDc,SAAC,GAA+B,IAA7BE,EAA4B,EAA5BA,sBAEPC,EAAY,CACd,EAAGJ,EACH,EAAGE,GAEP,GAAqCG,EAAAA,EAAAA,UAAS,GAA9C,eAAQC,EAAR,KAAmBC,EAAnB,KAEMC,EAAqB,CACvBC,KAAMC,EAASJ,GAAW3C,YAC1BgD,KAAKC,EAAAA,EAAAA,GAAsBF,EAASJ,GAAW1C,aAAc8C,EAASJ,GAAWhB,gBAG/EuB,EAAmBT,EAAUE,GAEnC,OACI,gBAAKb,UAAU,uDAAf,UAEI,iBAAKA,UAAU,gEAAf,WAEI,gBAAKA,UAAU,6CACVqB,QAAS,kBAAMX,GAAsB,IAD1C,UAEI,SAAC,EAAD,CAAOV,UAAU,qBAIrB,gBAAKA,UAAU,6BAAf,SAEKsB,OAAOC,KAAKZ,GAAWa,KAAI,SAACC,EAAGC,GAAJ,OAExB,iBACK1B,UAAS,gFAA2Ea,GAAaa,EAAQ,EAAI,kBAAoB,mBACjIL,QAAS,kBAAMP,EAAcY,EAAQ,IAF1C,qBAIaA,EAAQ,IAJXA,SAYlB,gBAAK1B,UAAU,mFAAf,UAEI,SAACoB,EAAD,CACIjD,aAAc8C,EAASJ,GAAW1C,aAClC0B,cAAeoB,EAASJ,GAAWhB,mBAI3C,SAAC8B,EAAA,EAAD,CAAoB3B,UAAU,2BAA2B4B,KAAMb","sources":["examples/index.js","components/icons/Close.js","components/Modal.js"],"sourcesContent":["const examples = {\n    1: {\n        tooltipHTML: `\n    <div class=\"tooltip-container\" style=\"display: inline-block\">\n\n        <p style=\"cursor: pointer\">Hover over me</p>\n\n        <div class=\"tooltip\">\n\n\n           <img \n               style=\"height: 80%;width: 100%;\"\n               src=\"https://camo.githubusercontent.com/a20ea32c92ad63e6796a6e6b1e4055d901fe7e4545e11da6ce95c5c21f2344c9/68747470733a2f2f696d6775722e636f6d2f71795957626f302e676966\"/>\n\n            <a style=\"display:block;text-decoration: none;\" href=\"https://github.com/mustafadalga/music-player\">\n        \n                <h3 style=\"font-weight:600;text-align: center;color: white;font-size: 18px;\">\n                 Music Player\n                 </h3>\n      \n            </a>\n\n            <i class=\"triangle\"></i>\n\n        </div>\n</div>\n    \n    `,\n        tooltipStyle: {\n            position: \"absolute\",\n            visibility: \"hidden\",\n            opacity: 0,\n            backgroundColor: \"#3b82f6\",\n            color: \"#ffffff\",\n            paddingLeft: \"0px\",\n            paddingRight: \"0px\",\n            paddingTop: \"0px\",\n            paddingBottom: \"0px\",\n            borderRadius: \"12px\",\n            textAlign: \"center\",\n            width: \"300px\",\n            height: \"250px\",\n            wordWrap: \"break-word\",\n            borderStyle: \"none\",\n            borderColor: \"#3b82f6\",\n            borderLeftWidth: \"0px\",\n            borderRightWidth: \"0px\",\n            borderTopWidth: \"0px\",\n            borderBottomWidth: \"0px\",\n            boxShadow: \"0px 4px 20px #475569\",\n            transition: \"all 0.3s 0s ease\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            bottom: \"calc(100% + 25px)\"\n        },\n        triangleStyle: {\n            position: 'absolute',\n            top: '100%',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            borderColor: \"#3b82f6 transparent transparent\",\n            borderWidth: \"16px 12px 0px\",\n            borderStyle: 'solid'\n        },\n    },\n    2: {\n        tooltipHTML: `\n  <div class=\"tooltip-container\" style=\"display: inline-block\">\n\n    <p style=\"cursor: pointer\">Hover over me</p>\n\n    <div class=\"tooltip\">\n    \n    \n        <p>\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n         Doloremque ea expedita ipsam libero repellendus, \n         sed sit sunt temporibus voluptatem voluptatum. Autem consequatur doloribus enim esse fuga\n          in laborum sapiente soluta!\n        </p>\n\n      <i class=\"triangle\"></i>\n\n    </div>\n</div>\n    \n    `,\n        tooltipStyle: {\n            position: \"absolute\",\n            visibility: \"hidden\",\n            opacity: 0,\n            backgroundColor: \"#3b82f6\",\n            color: \"#ffffff\",\n            paddingLeft: \"12px\",\n            paddingRight: \"12px\",\n            paddingTop: \"12px\",\n            paddingBottom: \"12px\",\n            borderRadius: \"12px\",\n            textAlign: \"center\",\n            width: \"750px\",\n            height: \"100px\",\n            wordWrap: \"break-word\",\n            borderStyle: \"none\",\n            borderColor: \"#3b82f6\",\n            borderLeftWidth: \"0px\",\n            borderRightWidth: \"0px\",\n            borderTopWidth: \"0px\",\n            borderBottomWidth: \"0px\",\n            boxShadow: \"0px 4px 20px #475569\",\n            transition: \"all 0.3s 0s ease\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            bottom: \"calc(100% + 25px)\"\n        },\n        triangleStyle: {\n            position: 'absolute',\n            top: '100%',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            borderColor: \"#3b82f6 transparent transparent\",\n            borderWidth: \"16px 12px 0px\",\n            borderStyle: 'solid'\n        },\n    },\n}\n\n\nexport default examples;","const Close = ({className}) => {\n\n    return (\n        <svg className={`w-8 h-8 ${className}`} fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\"\n                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                  clipRule=\"evenodd\"></path>\n        </svg>\n    )\n}\n\n\nexport default Close;","import React, { useState } from \"react\";\nimport PreviewTooltipCode from \"@/layouts/PreviewTooltipCode\";\nimport examples from \"@/examples\";\nimport cssCodeOutputTemplate from \"@/utils/cssCodeOutputTemplate\";\nimport Close from \"@/components/icons/Close\";\n\nconst Template1 = React.lazy(() => import(/* webpackChunkName: \"Template1\"*/ '@/examples/html-templates/Template1'));\nconst Template2 = React.lazy(() => import(/* webpackChunkName: \"Template2\"*/ '@/examples/html-templates/Template2'));\n\nconst Modal = ({ changeModalVisibility }) => {\n\n    const templates = {\n        1: Template1,\n        2: Template2\n    }\n    const [ exampleNo, changeExample ] = useState(1);\n\n    const activeExampleCodes = {\n        html: examples[exampleNo].tooltipHTML,\n        css: cssCodeOutputTemplate(examples[exampleNo].tooltipStyle, examples[exampleNo].triangleStyle)\n    }\n\n    const DynamicComponent = templates[exampleNo];\n\n    return (\n        <div className=\"fixed inset-0 w-screen h-screen p-8 bg-black/50 z-10\">\n\n            <div className=\"relative grid grid-rows-2 w-full h-full bg-blue-50 box-border\">\n\n                <div className=\"absolute right-2 top-2 z-20 cursor-pointer\"\n                     onClick={() => changeModalVisibility(false)}>\n                    <Close className=\"text-black/75\"/>\n                </div>\n\n\n                <div className=\"absolute left-8 top-6 flex\">\n\n                    {Object.keys(templates).map((_, index) => (\n\n                        <div key={index}\n                             className={`border z-20 border-solid border-0 border-b-4 py-2 px-8 cursor-pointer ${exampleNo == index + 1 ? 'border-blue-400' : 'border-zinc-400'}`}\n                             onClick={() => changeExample(index + 1)}>\n\n                            Example {index + 1}\n                        </div>\n\n                    ))}\n\n                </div>\n\n\n                <div className=\"flex items-center justify-center row-span-1 col-span-full overflow-auto relative\">\n\n                    <DynamicComponent\n                        tooltipStyle={examples[exampleNo].tooltipStyle}\n                        triangleStyle={examples[exampleNo].triangleStyle}/>\n                </div>\n\n\n                <PreviewTooltipCode className=\"row-span-1 col-span-full\" code={activeExampleCodes}/>\n\n\n            </div>\n        </div>\n    )\n}\nexport default Modal;"],"names":["tooltipHTML","tooltipStyle","position","visibility","opacity","backgroundColor","color","paddingLeft","paddingRight","paddingTop","paddingBottom","borderRadius","textAlign","width","height","wordWrap","borderStyle","borderColor","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","boxShadow","transition","left","transform","bottom","triangleStyle","top","borderWidth","className","fill","viewBox","xmlns","fillRule","d","clipRule","Template1","React","Template2","changeModalVisibility","templates","useState","exampleNo","changeExample","activeExampleCodes","html","examples","css","cssCodeOutputTemplate","DynamicComponent","onClick","Object","keys","map","_","index","PreviewTooltipCode","code"],"sourceRoot":""}